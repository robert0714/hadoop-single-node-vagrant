
- name: Ensure group "hadoop" exists
  group:
    name: hadoop
    state: present

# mkpasswd --method=sha-512
# To get the mkpasswd command:
#  sudo apt-get install -y whois 
#  sudo yum install expect
- name: Add the user 'hduser' with a bash shell, appending the group 'hadoop' and 'hadoop' to the user's groups
  user:
    name: hduser
    password: $6$bDY7woAi$mcxeKgNBEqTpfDC.TeNx0HDg7EiPL9xn4x7c/UzztPNk5d2JGk/A0Wa7n/e70x6.HSnIN4ymYyNn6KuXBBd7b1
    shell: /bin/bash
    groups: hadoop
    append: yes
    state: present
    expires: -1
  tags: [hadoop-single]   

- name: mkdir  /home/hduser/mydata/hdfs/namenode
  file:
    path: /home/hduser/mydata/hdfs/namenode
    owner: hduser
    group: hduser
    state: directory
    mode: 0777
  tags: [hadoop-single] 

- name: mkdir   /home/hduser/mydata/hdfs/datanode
  file:
    path:  /home/hduser/mydata/hdfs/datanode
    owner: hduser
    group: hduser
    state: directory
    mode: 0777
  tags: [hadoop-single]     
 

- name: check for hadoop installation
  become: yes
  stat:
    path: '{{hadoop_dir}}'
  changed_when: false
  register: hadoop_binary
- when: not hadoop_binary.stat.exists
  block:
    - name: download apache hadoop...
      become: yes
      become_user: root
      get_url:
        url: '{{hadoop_url}}'
        dest: /tmp/{{hadoop_archive}}
        checksum: '{{hadoop_checksum}}'
        mode: 0644
    - name: unarchive apache hadoop...
      become: yes
      become_user: root
      unarchive:
        remote_src: yes
        src: /tmp/{{hadoop_archive}}
        dest: '{{hadoop_parent_dir}}'
        creates: '{{hadoop_dir}}'
        owner: hduser
        group: hadoop
  always:
    - name: cleanup...
      become: yes
      become_user: root
      file:
        path: /tmp/{{hadoop_archive}}
        state: absent

- name: link hadoop...
  become: yes
  become_user: root
  file:
    state: link
    src: '{{hadoop_dir}}'
    dest: '{{hadoop_parent_dir}}/hadoop'
    owner: hduser
    group: hadoop

- name: include hadoop in the default path...
  become: yes
  become_user: root
  with_items:
    - f: hadoop.sh
      d: /etc/profile.d
  template:
    src: '{{item.f}}.j2'
    dest: '{{item.d}}/{{item.f}}'
    mode: '{{item.m|default("0644")}}'

- name: Configuration files are copied
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items: "{{ config_files }}"
  tags: [hadoop-single] 

- name: Password based logins are disabled - only public key based logins are allowed. 
- lineinfile: dest=/etc/ssh/sshd_config regexp='^#?PasswordAuthentication' line='PasswordAuthentication yes'
- lineinfile: dest=/etc/ssh/sshd_config regexp='^#?ChallengeResponseAuthentication' line='ChallengeResponseAuthentication yes' 